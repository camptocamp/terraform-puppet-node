- name: set hostname
  hostname:
    name: "{{ hostname }}"

- name: check if cloud.cfg file exists
  stat:
    path: /etc/cloud/cloud.cfg
  register: cloud_cfg

- name: prevent cloud-init from reverting hostname
  lineinfile:
    dest: /etc/cloud/cloud.cfg
    regexp: '^preserve_hostname:.*'
    line: 'preserve_hostname: true'
  when: cloud_cfg.stat.exists == true

- block:
  - name: Update all packages to the latest version
    apt:
      upgrade: dist

  - name: Add Camptocamp key
    apt_key:
      keyserver: hkp://keyserver.ubuntu.com:80
      id: 25167F35256F82B2CA594A3DF4831166EFDCBABE
      state: present

  - name: Configure Camptocamp repository
    apt_repository:
      repo: deb http://pkg.camptocamp.net/apt {{ ansible_distribution_release }}/staging sysadmin docker
      state: present
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- block:
  - block:
    - name: Add PuppetLabs key
      rpm_key:
        key: https://yum.puppet.com/RPM-GPG-KEY-puppet
        state: present
    - name: Configure PuppetLabs repository
      yum_repository:
        name: puppetlabs
        description: Puppetlabs
        baseurl: http://yum.puppet.com/puppet6/el/{{ansible_distribution_major_version}}/$basearch/

  - name: Update all packages to the latest version
    yum:
      update_cache: yes
      name: '*'
      state: latest
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat'

- name: Create /etc/puppetlabs/puppet directory
  file:
    path: /etc/puppetlabs/puppet
    state: directory
    recurse: "yes"
  register: puppet_directory_creation

- name: Deploy csr_attributes.yaml
  copy:
    dest: /etc/puppetlabs/puppet/csr_attributes.yaml
    content: |
      custom_attributes:
        1.2.840.113549.1.9.7: "{{ puppet_autosign_challenge }}"
      extension_requests:
        pp_role: "{{ puppet_role }}"
        pp_environment: "{{ puppet_environment }}"

- name: Create /etc/puppetlabs/facter/facts.d/ directory
  file:
    path: /etc/puppetlabs/facter/facts.d/
    state: directory
    recurse: "yes"

- name: Create ec2_userdata.txt file
  copy:
    dest: /etc/puppetlabs/facter/facts.d/ec2_userdata.txt
    content: |
      ec2_userdata=

- name: Create puppet.conf file
  copy:
    dest: /etc/puppetlabs/puppet/puppet.conf
    content: |
      [agent]
      server = {{ puppet_server }}
      ca_server = {{ puppet_caserver }}
      environment = {{ puppet_environment }}
      masterport = {{ puppet_port }}
      ca_port =  {{ puppet_caport }}
      http_read_timeout = 120
      show_diff = true
      splay = true
      usecacheonfailure = false

- name: Install Puppet
  package:
    name: puppet-agent
    state: latest

- name: Run Puppet
  command: /opt/puppetlabs/bin/puppet agent -t
  args:
    creates: /etc/puppetlabs/puppet/ssl/certs/ca.pem
  ignore_errors: true

- name: Reboot (first run only)
  shell: sleep 2 && reboot
  async: 1
  poll: 0
  when: puppet_directory_creation.changed

- name: Waiting for node to reboot
  wait_for_connection:
    timeout: 999999
